diff --git a/include/qdp_default_allocator.h b/include/qdp_default_allocator.h
index 04cb719e..fb7e0be9 100644
--- a/include/qdp_default_allocator.h
+++ b/include/qdp_default_allocator.h
@@ -21,12 +21,13 @@
 #include <map>
 #include <stdlib.h> // aligned_alloc is in cstdlib since c++17 and in stdlib.h since C11
 #include <string>
+#include <mutex>
 
 namespace QDP
 {
   namespace Allocator
   {
-
+    extern std::mutex default_allocator_mutex;
     namespace detail
     {
       inline std::map<void*, std::size_t>& getAllocs()
@@ -53,6 +54,7 @@ namespace QDP
       if (p == nullptr)
 	QDP_error_exit("Bad allocation! Currently there are %g MiB allocated",
 		       (double)detail::getCurrentlyAllocated() / 1024 / 1024);
+      std::lock_guard<std::mutex> lk(default_allocator_mutex);
       detail::getCurrentlyAllocated() += sizeof(T) * n;
       new (p) T[n];
       detail::getAllocs()[(void*)p] = n;
@@ -65,6 +67,7 @@ namespace QDP
     {
       if (p == nullptr)
 	return;
+      std::lock_guard<std::mutex> lk(default_allocator_mutex);
       std::size_t n = detail::getAllocs()[(void*)p];
       if (detail::getAllocs().erase((void*)p) != 1)
 	QDP_error_exit("Pointer not previously allocated with new_aligned");
diff --git a/lib/qdp_default_allocator.cc b/lib/qdp_default_allocator.cc
index 463f29ae..7c4bc5dd 100644
--- a/lib/qdp_default_allocator.cc
+++ b/lib/qdp_default_allocator.cc
@@ -8,7 +8,7 @@
 
 namespace QDP {
 namespace Allocator {
- 
+  std::mutex default_allocator_mutex;
   // The type returned on map insertion, allows me to check
   // the insertion was successful.
   typedef std::pair<MapT::iterator, bool> InsertRetVal;
